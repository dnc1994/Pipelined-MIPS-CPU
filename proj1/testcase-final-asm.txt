#01 ADDI $1 $0 0000000000000101 // $1 = 5
#02 ADDI $2 $0 0000000000000110 // $2 = 6
#03 AND $3 $1 $2 // $3 = 4
#04 OR $4 $1 $2 // $4 = 7
#05 ADD $5 $1 $2 // $5 = 11
#06 SUB $6 $2 $1 // $6 = 1
#07 SLT $7 $6 $5 // $7 = 1
#08 ADDI $8 $0 1111111111001110 // $8 = -50
#09 ADDI $0 $8 0000000000000000 // Invalid
#10 ADDI $9 $31 1111111111111111 // $9 = -1
#11 LW $9 2($31) // Invalid, $9 = -1
#12 SW $9 4($31) // DataMem[1] = -1
#13 LW $10 -1($1) // $10 = DataMem[1] = -1
#14 ADDI $11 $0 0000000000000001 // $11 = 1
#15 LW $11 0111111111111111($31) // Invalid, $11 = 1
#16 SLTI $12 $8 1111111111111111 // $12 = 1
#17 ADDI $13 $0 0111111111111111 // $13 = 32767
#18 BEQ $6 $7 0000000000000001 // jump to #20
#19 ADDI $14 $0 0111111111111111 // Not executed, $14 = 0
#20 ADDI $15 $0 0111111111111111 // $15 = 32767
#21 ADDI $16 $0 0111111111111111 // $16 = 32767
#22 ADDI $17 $0 1000000000000000 // $17 = -32768
#23 ADDI $18 $0 1000000000000000 // $18 = -32768
#24 ADD $19 $17 $18 // $19 = -65536
#25 SW $19 0($0) // DataMem[0] = -65536
#26 LW $20 0($0) // $20 = -65536